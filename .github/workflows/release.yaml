name: Release 

on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
  
permissions:
  contents: write
    

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm ci

      - name: Generate changelog
        run: |
          git fetch --tags
          last_tag=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
          git log --pretty=format:'- %s' ${last_tag}..HEAD > CHANGELOG.md || echo "No commits since last tag."

      - name: Archive source code
        uses: actions/upload-artifact@v2
        with:
          name: source-code
          path: .

      - name: Get Changelog & Version 
        id: changelog_and_version
        run: |
          CHANGE_LOG=$(cat CHANGELOG.md)
          echo -ne "CHANGELOG=${CHANGE_LOG}\n" >> $GITHUB_OUTPUT
          MYVER=$(node -pe "require('./package.json').version")
          echo -ne "VERSION=${MYVER}\n" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: source-code
          name: Release ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'pre') }}
          tag: ${{ github.ref }}
          body: |
            ## Changelog
            ${{ steps.changelog_and_version.outputs.CHANGELOG }}

            ## Version
            Version: ${{ steps.changelog_and_version.outputs.VERSION }}

            ## Release Files
            * [Source code](https://github.com/zodtf/ptero-sync/archive/${{ github.ref }}.zip)

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ptero-sync-${{ github.ref }}.zip
          asset_name: ptero-sync-${{ github.ref }}.zip
          asset_content_type: application/zip
